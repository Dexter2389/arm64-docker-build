name: 'Crontab-UI ARM64 Build'

env:
  DOCKERHUB_REPO: dexter2389/crontab-ui

# Trigger on release
on:
  repository_dispatch:
    types: [crontab-ui]
    branches: [master]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate Docker image labels
        uses: crazy-max/ghaction-docker-meta@v2.5.0
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          label-custom: |
            maintainer=dexter2389
            org.opencontainers.image.title=crontab-ui
            org.opencontainers.image.description=Easy and safe way to manage your crontab file
            org.opencontainers.image.url=https://github.com/alseambusher/crontab-ui
            org.opencontainers.image.licenses=MIT Licensing

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Sync README To DockerHub
        uses: meeDamian/sync-readme@v1.0.6
        with:
          user: ${{ secrets.DOCKER_USERNAME }}
          pass: ${{ secrets.DOCKER_PASSWORD }}
          readme: ./Crontab-UI/README.md
          slug: ${{ env.DOCKERHUB_REPO }}
          
      - name: Build and Push - main release
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Crontab-UI/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest
          labels: ${{ steps.docker_meta.outputs.labels }}